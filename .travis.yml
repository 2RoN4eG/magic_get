# Use, modification, and distribution are
# subject to the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
#
# Copyright Antony Polukhin 2014-2016.

#
# See https://svn.boost.org/trac/boost/wiki/TravisCoverals for description of this file
# and how it can be used with Boost libraries.
#
# File revision #6 modified

env:
    matrix:
        - CXX_STANDARD=c++14 TOOLSET=g++-5
        - CXX_STANDARD=c++1z TOOLSET=g++-5
        - CXX_STANDARD=c++1y TOOLSET=clang++
        #- CXX_STANDARD=c++14 TOOLSET=clang++-3.7


###############################################################################################################
# From this point and below code is same for all the Boost libs
###############################################################################################################
sudo: false
language: cpp
compiler:
    - gcc

os:
    - linux

# Installing additional tools
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    #- llvm-toolchain-precise-3.7
    packages:
    - valgrind
    - gcc-5
    - g++-5
    - clang
    #- clang-3.7

script:
    - git clone https://github.com/boostorg/core.git ../boost_core
    - git clone https://github.com/boostorg/assert.git ../boost_assert
    - git clone https://github.com/boostorg/config.git ../boost_config
    - git clone https://github.com/boostorg/functional.git ../boost_functional
    - git clone https://github.com/boostorg/integer.git ../boost_integer
    - git clone https://github.com/boostorg/type_traits.git ../boost_tt
    - git clone https://github.com/boostorg/mpl.git ../boost_mpl
    - git clone https://github.com/boostorg/detail.git ../boost_detail
    - git clone https://github.com/boostorg/static_assert.git ../boost_sa
    - git clone https://github.com/boostorg/preprocessor.git ../boost_preprocessor
    - INCLUDES="-I../boost_core/include/ -I../boost_config/include/ -I../boost_assert/include/ -I../boost_preprocessor/include/ -I../boost_sa/include/ -I../boost_functional/include/ -I../boost_detail/include/ -I../boost_integer/include/ -I../boost_tt/include/ -I../boost_mpl/include/ -I./include/"
    # `--coverage` flags required to generate coverage info for Coveralls
    - $TOOLSET -std=$CXX_STANDARD --coverage $INCLUDES test/core.cpp && valgrind ./a.out && rm ./a.out
    - $TOOLSET -std=$CXX_STANDARD --coverage $INCLUDES test/count_fields_on_chars.cpp && valgrind ./a.out && rm ./a.out
    - $TOOLSET -std=$CXX_STANDARD --coverage $INCLUDES test/count_fields_on_ints.cpp && valgrind ./a.out && rm ./a.out
    - $TOOLSET -std=$CXX_STANDARD --coverage $INCLUDES test/count_fields_on_long_longs.cpp && valgrind ./a.out && rm ./a.out
    - $TOOLSET -std=$CXX_STANDARD --coverage $INCLUDES test/count_fields_on_shorts.cpp && valgrind ./a.out && rm ./a.out
    - $TOOLSET -std=$CXX_STANDARD --coverage $INCLUDES test/count_fields_on_void_ptrs.cpp && valgrind ./a.out && rm ./a.out
    - $TOOLSET -std=$CXX_STANDARD --coverage $INCLUDES test/flat_functions_for.cpp && valgrind ./a.out && rm ./a.out
    - $TOOLSET -std=$CXX_STANDARD --coverage $INCLUDES test/global_flat_ops.cpp && valgrind ./a.out && rm ./a.out
    - $TOOLSET -std=$CXX_STANDARD --coverage $INCLUDES test/minimal.cpp && valgrind ./a.out && rm ./a.out
    - $TOOLSET -std=$CXX_STANDARD --coverage $INCLUDES test/flat_ops.cpp && valgrind ./a.out && rm ./a.out
    - $TOOLSET -std=$CXX_STANDARD --coverage $INCLUDES test/std_interactions.cpp && valgrind ./a.out && rm ./a.out

